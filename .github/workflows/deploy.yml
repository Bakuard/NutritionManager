name: deploy
run-name: ${{ github.actor }} deploy NutritionManager on AWS

on: 
    push: 
        branches: 
            - 'develop'
    pull_request: 
        branches: 
            - 'develop'

jobs: 
    run-unit-tests: 
        runs-on: ubuntu-latest
        steps: 
            - name: copy my repository to runner
              uses: actions/checkout@v3
            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with: 
                  java-version: '17'
                  distribution: adopt-hotspot
            - name: Set up Postgresql
              uses: harmon758/postgresql-action@v1
              with: 
                  postgresql db: NutritionManagerUnitTest
                  postgresql user: nutrition_manager_tester
                  postgresql password: nutrition_manager_tester
                  postgresql version: 11
            - name: Run unit tests and build project
              run: mvn --batch-mode --update-snapshots package
            - name: Remeber build file name
              run: |
                  echo "buildFileInDirectory=`find ./target -maxdepth 1 -name '*.jar'`" >> $GITHUB_ENV
                  cd target
                  ls -la
                  echo "buildFile=`find . -maxdepth 1 -name '*.jar'`" >> $GITHUB_ENV
            - name: Add host to known hosts
              uses: kielabokkie/ssh-key-and-known-hosts-action@v1
              with:
                  ssh-private-key: ${{ secrets.NUTRITION_MANAGER_AWS_INSTANCE_KEY }}
                  ssh-host: ${{ secrets.NUTRITION_MANAGER_AWS_HOST }}
            - name: Upload Files to server
              uses: appleboy/scp-action@master
              with:
                host: ${{ secrets.NUTRITION_MANAGER_AWS_HOST }}
                username: ${{ secrets.NUTRITION_MANAGER_AWS_INSTANCE_USER }}
                key: ${{ secrets.NUTRITION_MANAGER_AWS_INSTANCE_KEY }}
                source: "${{ env.buildFileInDirectory }}"
                target: "/home/ubuntu/nutritionmanager"
            - name: Run application on server
              run: |
                  ssh ${{ secrets.NUTRITION_MANAGER_AWS_INSTANCE_USER }}@${{ secrets.NUTRITION_MANAGER_AWS_HOST }} <<EOT
                  cd nutritionmanager
                  cp "${{ env.buildFileInDirectory }}" ./
                  rm -r target
                  ./stop
                  nohup ./start "${{ env.buildFile }}" &>/dev/null &
                  sleep 30
                  echo "close connection with server"
                  exit
                  EOT
